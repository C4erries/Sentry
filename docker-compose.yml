services:
    zookeeper:
      image: confluentinc/cp-zookeeper:7.4.10
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
      ports:
        - "2181:2181"

    kafka:
      image: "confluentinc/cp-kafka:7.4.10"
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
        - "29092:29092" 
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:29092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
    kafka-ui:
      image: provectuslabs/kafka-ui:latest
      ports:
        - "8080:8080"
      environment:
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
        KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      depends_on:
        - kafka

    redis:
      image: redis:7.2
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data

    postgres:
      image: postgres:15
      ports:
        - "5432:5432"
      environment:
        POSTGRES_USER: sentry
        POSTGRES_PASSWORD: sentrypass
        POSTGRES_DB: sentry_db
      volumes:
        - pg_data:/var/lib/postgresql/data

    sentry:
      build:
        context: .
        dockerfile: Dockerfile
      depends_on:
        - kafka
        - kafka-ui
        - redis
        #- postgres
      ports:
        - "8090:8090"
      environment:
        KAFKA_ADDR: kafka:29092
        REDIS_ADDR: redis:6379
        POSTGRES_DSN: postgres://sentry:sentrypass@postgres:5432/sentry_db?sslmode=disable
      command: ["/sentry"]


volumes:
  pg_data:
  redis_data:  